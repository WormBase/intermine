primaryIdentifier           = /Variation/text()

symbol                      = /Variation/Name/Public_name/Variation_name/text()
otherName                   = /Variation/Name/Other_name/Variation_name/text()

#code modification
sequenceDetails             = /Variation/Sequence_details
(engineeredAllele)type      = /Variation/Variation_type/Engineered_allele/text()
(allele)type                = /Variation/Variation_type/Allele/text()
(snp)type                   = /Variation/Variation_type/SNP/text()
(confirmedSNP)type          = /Variation/Variation_type/Confirmed_SNP/text()
(predictedSNP)type          = /Variation/Variation_type/Predicted_SNP/text()
(rflp)type                  = /Variation/Variation_type/RFLP/text()
(transposonInsertion)type   = /Variation/Variation_type/Transposon_insertion/text()
(naturalVariant)type        = /Variation/Variation_type/Natural_variant/text()


(substitution)typeOfMutation              = /Variation/Sequence_details/Type_of_mutation/Substitution/text()
(deletion)typeOfMutation              = /Variation/Sequence_details/Type_of_mutation/Deletion/text()
(insertion)typeOfMutation              = /Variation/Sequence_details/Type_of_mutation/Insertion/text()
(tandemDuplication)typeOfMutation              = /Variation/Sequence_details/Type_of_mutation/Tandem_duplication/text()

(notSequenced)sequenceStatus    = /Variation/Sequence_details/SeqStatus/Not_sequenced/text()
(sequenced)sequenceStatus       = /Variation/Sequence_details/SeqStatus/Sequenced/text()
(pendingCuration)sequenceStatus = /Variation/Sequence_details/SeqStatus/Pending_curation/text()

linkedTo                    = /Variation/Linked_to/Variation/text()

species                     = /Variation/Origin/Species/Species/text()
strains                      = /Variation/Origin/Strain/Strain/text()
fromLabs                  = /Variation/Origin/Laboratory/Laboratory/text()

productionMethod            = /Variation/Origin/Production_method/text()

#make higher level
if.KOConsortiumAllele       = /Variation/Origin/KO_consortium_allele[1]
if.NBPAllele                = /Variation/Origin/NBP_allele[1]
if.NemaGENETAGConsortiumAllele  = /Variation/Origin/NemaGENETAG_consortium_allele[1]

detectionMethod             = /Variation/Origin/Detection_method/Txt/text()

(live)status            = /Variation/Origin/Status/Live/text()
(supressed)status       = /Variation/Origin/Status/Supressed/text()
(dead)status            = /Variation/Origin/Status/Dead/text()

(gene)affects           = /Variation/Affects/Gene/Gene/text()
(predictedCDS)affects   = /Variation/Affects/Predicted_CDS/Predicted_CDS/text()
(transcript)affects     = /Variation/Affects/Trasncript/Transcript/text()
(psudeogene)affects     = /Variation/Affects/Pseudogene/Pseudogene/text()
(feature)affects        = /Variation/Affects/Feature/Feature/text()
(interactor)affects     = /Variation/Affects/Interactor/Interactor/text()


gene.primaryIdentifier      = /Variation/Affects/Gene/Gene/text()
mutagen                     = /Variation/Isolation/Mutagen/Txt/text()
#geneClass                   = /Variation/Genetics/Gene_class/Gene_class/text()
interpolatedMapPosition     = /Variation[1]/Genetics/Interpolated_map_position/Map/Float/text()


#Collapse and combine, high level
opal_UGA                    = /Variation/Affects/Predicted_CDS/CDS/Nonsense/Opal_UGA/Txt/text()
amber_UAG                   = /Variation/Affects/Predicted_CDS/CDS/Nonsense/Amber_UAG/Txt/text()
ochre_UAA                   = /Variation/Affects/Predicted_CDS/CDS/Nonsense/Ochre_UAA/Txt/text()
missense                    = /Variation/Affects/Predicted_CDS/CDS/Missense/Int/text()
missenseChange              = /Variation/Affects/Predicted_CDS/CDS/Missense/Int/Txt/text()

#phenotype.primaryIdentifier = /Variation/Description/Phenotype/Phenotype/text()
#phenotypesNotObserved.primaryIdentifier = /Variation/Description/Phenotype_not_observed/Phenotype/text()



